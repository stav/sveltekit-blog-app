// GENERATED by @edgedb/generate v0.4.1

import * as $ from "../../reflection.mjs";
import * as _ from "../../imports.mjs";
const Base64Alphabet = $.makeType(_.spec, "5ca96424-93ba-560a-994b-7820c9623e3d", _.syntax.literal);

function base64_encode(...args) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('std::enc::base64_encode', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000102", optional: false, setoftype: false, variadic: false}], namedArgs: {"alphabet": {typeId: "5ca96424-93ba-560a-994b-7820c9623e3d", optional: true, setoftype: false, variadic: false}, "padding": {typeId: "00000000-0000-0000-0000-000000000109", optional: true, setoftype: false, variadic: false}}, returnTypeId: "00000000-0000-0000-0000-000000000101"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "std::enc::base64_encode",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  });
};

function base64_decode(...args) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('std::enc::base64_decode', args, _.spec, [
    {args: [{typeId: "00000000-0000-0000-0000-000000000101", optional: false, setoftype: false, variadic: false}], namedArgs: {"alphabet": {typeId: "5ca96424-93ba-560a-994b-7820c9623e3d", optional: true, setoftype: false, variadic: false}, "padding": {typeId: "00000000-0000-0000-0000-000000000109", optional: true, setoftype: false, variadic: false}}, returnTypeId: "00000000-0000-0000-0000-000000000102"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "std::enc::base64_decode",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  });
};



export { Base64Alphabet };

const __defaultExports = {
  "Base64Alphabet": Base64Alphabet,
  "base64_encode": base64_encode,
  "base64_decode": base64_decode
};
export default __defaultExports;
