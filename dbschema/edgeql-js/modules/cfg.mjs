// GENERATED by @edgedb/generate v0.4.1

import * as $ from "../reflection.mjs";
import * as _ from "../imports.mjs";
const AllowBareDDL = $.makeType(_.spec, "50264e27-859e-5d2b-a589-ebb3d8ba4d8c", _.syntax.literal);

const ConnectionTransport = $.makeType(_.spec, "1adbf789-39c3-5070-bc17-776f94d59e46", _.syntax.literal);

const memory = $.makeType(_.spec, "00000000-0000-0000-0000-000000000130", _.syntax.literal);

const $ConfigObject = $.makeType(_.spec, "d408002f-3891-5b9a-b19c-23589a88998b", _.syntax.literal);

const ConfigObject= _.syntax.$PathNode($.$toSet($ConfigObject, $.Cardinality.Many), null);

const $AbstractConfig = $.makeType(_.spec, "8b66e734-a01e-5638-a812-359e0d005a37", _.syntax.literal);

const AbstractConfig= _.syntax.$PathNode($.$toSet($AbstractConfig, $.Cardinality.Many), null);

const $Auth = $.makeType(_.spec, "a2ba7516-d398-5ec2-b25e-221b2f7b9e87", _.syntax.literal);

const Auth= _.syntax.$PathNode($.$toSet($Auth, $.Cardinality.Many), null);

const $AuthMethod = $.makeType(_.spec, "128fcc80-bf32-5bdc-abac-09cf1532a7c1", _.syntax.literal);

const AuthMethod= _.syntax.$PathNode($.$toSet($AuthMethod, $.Cardinality.Many), null);

const $Config = $.makeType(_.spec, "363133b1-e993-50a0-94d3-aa0472b1a0a7", _.syntax.literal);

const Config= _.syntax.$PathNode($.$toSet($Config, $.Cardinality.Many), null);

const $DatabaseConfig = $.makeType(_.spec, "c046988e-25f8-55b8-8d94-9e2a13d7625f", _.syntax.literal);

const DatabaseConfig= _.syntax.$PathNode($.$toSet($DatabaseConfig, $.Cardinality.Many), null);

const $ExtensionConfig = $.makeType(_.spec, "89fb9b8b-d3b2-5075-9d1a-f5b116a0f188", _.syntax.literal);

const ExtensionConfig= _.syntax.$PathNode($.$toSet($ExtensionConfig, $.Cardinality.Many), null);

const $InstanceConfig = $.makeType(_.spec, "d9e9f342-7992-544c-b6af-459302121188", _.syntax.literal);

const InstanceConfig= _.syntax.$PathNode($.$toSet($InstanceConfig, $.Cardinality.Many), null);

const $JWT = $.makeType(_.spec, "4e795376-37e8-5381-8ae4-d621c80bbc7b", _.syntax.literal);

const JWT= _.syntax.$PathNode($.$toSet($JWT, $.Cardinality.Many), null);

const $Password = $.makeType(_.spec, "9df8c566-c274-5d75-a948-2d901505d7de", _.syntax.literal);

const Password= _.syntax.$PathNode($.$toSet($Password, $.Cardinality.Many), null);

const $SCRAM = $.makeType(_.spec, "ca43bc46-6dd2-55fc-98dc-358978df0f24", _.syntax.literal);

const SCRAM= _.syntax.$PathNode($.$toSet($SCRAM, $.Cardinality.Many), null);

const $Trust = $.makeType(_.spec, "7fc09ace-4af4-5d90-a9ab-94f9bb4cdb42", _.syntax.literal);

const Trust= _.syntax.$PathNode($.$toSet($Trust, $.Cardinality.Many), null);

function get_config_json(...args) {
  const {returnType, cardinality, args: positionalArgs, namedArgs} = _.syntax.$resolveOverload('cfg::get_config_json', args, _.spec, [
    {args: [], namedArgs: {"sources": {typeId: "bb221d39-09f1-507e-8851-62075bb61823", optional: true, setoftype: false, variadic: false}, "max_source": {typeId: "00000000-0000-0000-0000-000000000101", optional: true, setoftype: false, variadic: false}}, returnTypeId: "00000000-0000-0000-0000-00000000010f"},
  ]);
  return _.syntax.$expressionify({
    __kind__: $.ExpressionKind.Function,
    __element__: returnType,
    __cardinality__: cardinality,
    __name__: "cfg::get_config_json",
    __args__: positionalArgs,
    __namedargs__: namedArgs,
  });
};



export { AllowBareDDL, ConnectionTransport, memory, $ConfigObject, ConfigObject, $AbstractConfig, AbstractConfig, $Auth, Auth, $AuthMethod, AuthMethod, $Config, Config, $DatabaseConfig, DatabaseConfig, $ExtensionConfig, ExtensionConfig, $InstanceConfig, InstanceConfig, $JWT, JWT, $Password, Password, $SCRAM, SCRAM, $Trust, Trust };

const __defaultExports = {
  "AllowBareDDL": AllowBareDDL,
  "ConnectionTransport": ConnectionTransport,
  "memory": memory,
  "ConfigObject": ConfigObject,
  "AbstractConfig": AbstractConfig,
  "Auth": Auth,
  "AuthMethod": AuthMethod,
  "Config": Config,
  "DatabaseConfig": DatabaseConfig,
  "ExtensionConfig": ExtensionConfig,
  "InstanceConfig": InstanceConfig,
  "JWT": JWT,
  "Password": Password,
  "SCRAM": SCRAM,
  "Trust": Trust,
  "get_config_json": get_config_json
};
export default __defaultExports;
